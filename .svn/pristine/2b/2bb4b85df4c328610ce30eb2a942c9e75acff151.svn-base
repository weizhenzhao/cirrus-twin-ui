define(['angular', './px-module'], function(angular, pxModule) {
    'use strict';
    return pxModule.controller('ChartCtrl', ['$scope','$http','$stateParams', function($scope,$http,$stateParams) {
        // var elem = $('#editor-trigger').get(0);
        // var editor = new wangEditor(elem);
        // editor.destroy();
        if(sessionStorage.getItem('mute')=='false'||sessionStorage.getItem('mute')==null||sessionStorage.getItem('mute')==''||sessionStorage.getItem('mute')==undefined){
            sessionStorage.setItem('mute','false');
            $('#muteBtn').attr('class','muteFalse');
        }else{
            sessionStorage.setItem('mute','true');
            $('#muteBtn').attr('class','muteTrue');
        }
        $scope.recorder;
        var audio = $("audio[name='speechvalue']");
        $scope.sendMsg= function(){
            var preTxt = '<div class="message me"><img src="images/user00.png" width="40" height="40"><div class="bubble right bubble_primary"><div class="bubble_cont">'+ $scope.sendTxt+'</div></div></div>';
            if($scope.sendTxt!=''){
                $("#chartContent").append(preTxt);
            }
            $http({
                url: 'api/CirrusTwin/getAnswerByText/'+$scope.sendTxt,
                // url: 'api/CirrusTwin/getAnswerByText2Voice/'+$scope.sendTxt,
                method: 'GET'
            }).success(function (data, header, config, status) {
                var audioUrl = angular.fromJson(data).answers;
                audioUrl =  audioUrl.toString().replace('/home','https://cirrus-twin-qa.run.aws-usw02-pr.ice.predix.io');
                $('#resp').attr('src',audioUrl);
                // alert($('#resp').attr('src'));
                // playRecord();
                if(angular.toJson(data).indexOf('errormessage')!=-1){
                    var answer = angular.fromJson(data).errormessage;
                    var sufTxt = '<div class="message"><img src="images/user11.png" width="40" height="40"><div class="bubble left"><div class="bubble_cont">'+answer+'</div></div></div>';
                    $("#chartContent").append(sufTxt);
                }else{
                    var jsonObj = angular.fromJson(data);
                    var answer = jsonObj.answers;
                    var sufTxt = '<div class="message"><img src="images/user11.png" width="40" height="40"><div class="bubble left"><div class="bubble_cont">'+answer+'</div></div></div>';
                    $("#chartContent").append(sufTxt);
                }

            });

            $scope.sendTxt='';
        }

        $scope.mute = function(){
            if(sessionStorage.getItem('mute')=='false'||sessionStorage.getItem('mute')==null||sessionStorage.getItem('mute')==''||sessionStorage.getItem('mute')==undefined){
                sessionStorage.setItem('mute','true');
                $('#muteBtn').attr('class','muteTrue');
            }else{
                sessionStorage.setItem('mute','false');
                $('#muteBtn').attr('class','muteFalse');
            }
        }



        $scope.startRecord = function () {
            $('#recordBtn').attr('class','recordPress');
            HZRecorder.get(function (rec) {
                $scope.recorder = rec;
                $scope.recorder.start();
            });
        }
        function obtainRecord(){
            var fd = new FormData();
            var file = $scope.recorder.getBlob();
            fd.append('audioData', file);
            $http({
                url: 'api/CirrusTwin/SoundCommit',
                // url: '/manage/manage/cells',
                headers: {'Content-Type':undefined},
                transformRequest: angular.identity,
                data:fd,

                method: 'POST'
            }).success(function (data, header, config, status) {

                console.log(angular.toJson(data).toString().indexOf('errormessage'));
                var respStr = angular.fromJson(data);
                console.log(angular.toJson(respStr));
                if(angular.toJson(respStr).indexOf('errormessage')!=-1){
                    var answer = angular.fromJson(data).errormessage;
                    var sufTxt = '<div class="message"><img src="images/user11.png" width="40" height="40"><div class="bubble left"><div class="bubble_cont">'+answer+'</div></div></div>';
                    $("#chartContent").append(sufTxt);
                }else{
                    var question = angular.fromJson(data).question;
                    var preTxt = '<div class="message me"><img src="images/user00.png" width="40" height="40"><div class="bubble right bubble_primary"><div class="bubble_cont">'+question+'</div></div></div>';
                    $("#chartContent").append(preTxt);

                    var answer = angular.fromJson(data).answer;
                    var sufTxt = '<div class="message"><img src="images/user11.png" width="40" height="40"><div class="bubble left"><div class="bubble_cont">'+answer+'</div></div></div>';
                    $("#chartContent").append(sufTxt);
                }
            });

        };
        $scope.stopRecord = function (){
            $('#recordBtn').attr('class','recordLoss');
            $scope.recorder.stop();
            obtainRecord();
        }

        function playRecord(){
            $('#resp').attr('src');
            $('#resp').play();
        };

        function covertTextToVoice(){
            $.ajax({
                type:'POST',
                url:getRootPath()+'/TextToSpeech.do',
                data:{"writtenText":$("#writtentext").val()},
                dataType: "json",
                success: function(data){
                    $("audio[name=audiosource]").src=data["filepath"];
                }
            });
        }
        function getRootPath(){
            var curWwwPath=window.document.location.href;
            var pathName=window.document.location.pathname;
            var pos=curWwwPath.indexOf(pathName);
            var localhostPaht=curWwwPath.substring(0,pos);
            var projectName=pathName.substring(0,pathName.substr(1).indexOf('/')+1);
            return(localhostPaht+projectName);
        }


    }]);
});
