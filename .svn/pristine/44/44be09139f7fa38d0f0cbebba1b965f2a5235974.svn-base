define(['angular', './px-module'], function(angular, pxModule) {
    'use strict';
    return pxModule.controller('EditAnswerCtrl', ['$state','$scope','$http','$stateParams', function($state,$scope,$http,$stateParams) {


        $scope.answer = {} ;
        $scope.image = {} ;
        var elem = $('#editor-trigger').get(0);
        var editor = new wangEditor(elem);
        editor.config.uploadImgUrl = '/upload';
        editor.config.lang = wangEditor.langs['en'];
        editor.config.emotionsShow = 'value';
        editor.create();
        function trim(str)
        {
            return str.replace(/(^\s*)|(\s*$)/g, '');
        }
        var paramId = $stateParams.paramId;
        $http({
            url: '/manage/answerManage/editAnswer/'+paramId,
            method: 'GET'
        }).then(function (data) {
            var answer = angular.fromJson(data.data);
            $scope.answer.question = answer.question;
            $scope.answer.answer = answer.answer;
            $scope.answer.detailAnswer = answer.detailAnswer;
            var fileNames = answer.fileNames.splice(',');
            if(fileNames.length>0){
                    $scope.image.paramId=paramId;
                    $http({
                        url: '/manage/answerManage/loadImages/',
                        method: 'POST',
                        data:$scope.image
                    }).then(function (data) {
                        var tempHtml = $scope.answer.detailAnswer;
                        for(var i=0;i<angular.fromJson(data.data).length;i++){
                            var answerDetail = angular.fromJson(angular.fromJson(data.data)[i]);
                            var tempName=trim(answerDetail.fileName);
                            tempHtml = tempHtml.replace(tempName,'data:image/png;base64,'+answerDetail.fileContent);
                        }
                           editor.$txt.append(tempHtml);

                    });
            }else{
                editor.$txt.append(answer.detailAnswer);
            }


        });

        $scope.cancel=function(){
            history.go(-1);
        }

        $scope.save = function(){
            var html = editor.$txt.html();
            var imgNames = new Array();
            var imgContent=new Array();
            var imgs = editor.$txt.find('img');
            for(var i = 0 ;i<imgs.length;i++){
                var timestamp = Date.parse(new Date());
                imgContent[i] = imgs[i].src.split('base64,')[1];
                // alert(imgContent[i]);
                imgs[i].src = timestamp+'_'+i;
                imgNames[i] = timestamp+'_'+i;
            }
            var uploadHtml = editor.$txt.html();
            // alert(uploadHtml);
            $scope.answer.fileNames= imgNames ;
            $scope.answer.detailAnswer= uploadHtml;

            $http({
                url: '/manage/answerManage/saveAnswerDetails',
                data: $scope.answer,
                method: 'POST'
            }).then(function (data) {
                var id = angular.fromJson(data).id;

                $http({
                    url: '/api/CirrusTwin/createIndex/'+$scope.answer.question+'/'+$scope.answer.answer+'/'+id,
                    method: 'GET'
                }).then(function (data) {

                });
                if(i<imgs.length==0){
                    $state.go("showAnswer");
                }
                for(var i = 0 ;i<imgs.length;i++){
                    $scope.image.fileName =   imgNames[i];
                    $scope.image.fileContent = imgContent[i];
                    $scope.image.paramId = id;
                    $http({
                        url: '/manage/answerManage/saveImages',
                        data: $scope.image,
                        method: 'POST'
                    }).then(function (data) {
                        if(i==imgs.length-1){
                            $state.go("showAnswer");
                        }
                    });
                }


            });

        }


    }]);
});
